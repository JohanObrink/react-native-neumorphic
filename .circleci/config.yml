version: 2

defaults: &defaults
  docker:
    - image: circleci/node:10
  working_directory: ~/project

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - restore_cache:
          keys:
            - dependencies-example-{{ checksum "example/package.json" }}
            - dependencies-example-
      - run: |
          yarn install --cwd example
          yarn install
      - save_cache:
          key: dependencies-{{ checksum "package.json" }}
          paths: node_modules
      - save_cache:
          key: dependencies-example-{{ checksum "example/package.json" }}
          paths: example/node_modules
      - persist_to_workspace:
          root: .
          paths: .
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: |
          yarn lint
  typescript:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn typescript
  unit-tests:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn test --coverage
      - store_artifacts:
          path: coverage
          destination: coverage
  build-package:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run: yarn prepare
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/project/.npmrc
      - run:
          name: Increase version number
          command: yarn semantic-release
      - run:
          name: Publish package
          command: npm publish
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - install-dependencies:
          filters:
            branches:
              only: master
      - lint:
          filters:
            branches:
              only: master
          requires:
            - install-dependencies
      - typescript:
          filters:
            branches:
              only: master
          requires:
            - install-dependencies
      - unit-tests:
          filters:
            branches:
              only: master
          requires:
            - install-dependencies
      - build-package:
          filters:
            branches:
              only: master
          requires:
            - install-dependencies
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - build-package
